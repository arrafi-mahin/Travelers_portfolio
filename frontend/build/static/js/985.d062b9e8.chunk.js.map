{"version":3,"file":"static/js/985.d062b9e8.chunk.js","mappings":"oLA4DA,MAzDA,SAAqBA,GACnB,OAAwBC,EAAAA,EAAAA,YAAU,eAA3BC,EAAI,KAAEC,EAAO,KACpB,GAAoCF,EAAAA,EAAAA,YAAU,eAAvCG,EAAU,KAAEC,EAAa,KAChC,GAA8BJ,EAAAA,EAAAA,WAAS,GAAM,eAAtCK,EAAO,KAAEC,EAAU,KAepBC,GAAgBC,EAAAA,EAAAA,UAetB,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBR,EAAcM,EAAWG,OAC3B,EACAH,EAAWI,cAAcb,EALzB,CAMF,GAAG,CAACA,KAMF,iBAAKc,UAAU,eAAc,WAC3B,kBACEC,KAAK,OACLC,GAAIlB,EAAMkB,GACVC,IAAKX,EACLY,MAAO,CAAEC,QAAS,QAClBC,OAAO,kBACPC,SArCgB,SAACC,GACrB,IAAIC,EACAC,EAAcpB,EACdkB,EAAMG,OAAOC,OAAuC,IAA9BJ,EAAMG,OAAOC,MAAMC,QAC3CJ,EAAaD,EAAMG,OAAOC,MAAM,GAChCzB,EAAQsB,GACRlB,GAAW,GACXmB,GAAc,IAEdnB,GAAW,GACXmB,GAAc,GAEhB1B,EAAM8B,QAAQ9B,EAAMkB,GAAIO,EAAYC,EACtC,KA0BI,iBAAKV,UAAS,uBAAkBhB,EAAM+B,QAAU,UAAW,WACzD,iBAAKf,UAAU,wBAAuB,UACnCZ,IAAc,gBAAK4B,IAAK5B,EAAY6B,IAAI,aACvC7B,IAAc,uBAAG,8BAErB,SAAC8B,EAAA,EAAM,CAACjB,KAAK,SAASkB,QAlBH,WACvB3B,EAAc4B,QAAQC,OACxB,EAgBsD,SAAC,mBAIjD/B,IAAW,yBAAG,IAAEN,EAAMsC,eAG9B,C,4EC9CA,EARa,SAAAtC,GACX,OACE,gBAAKgB,UAAS,eAAUhB,EAAMgB,WAAaI,MAAOpB,EAAMoB,MAAM,SAC3DpB,EAAMuC,UAGb,C,uOCuJA,MAhJA,SAAcvC,GACZ,OAA8BC,EAAAA,EAAAA,WAAS,GAAK,eAArCuC,EAAO,KAAEC,EAAU,KAC1B,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WACjCC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACxB,GAA+CC,EAAAA,EAAAA,GAC7C,CACEC,MAAO,CACLC,MAAO,GACP9C,SAAS,GAEX+C,SAAU,CACRD,MAAO,GACP9C,SAAS,KAGb,GACD,eAZMgD,EAAS,KAAEC,EAAY,KAAEC,EAAW,KAcrCC,EAAiB,yCAAG,WAAOjC,GAAK,gFACb,GAAvBA,EAAMkC,kBAEFlB,EAAQ,CAAD,yCAEoBK,EACzBc,wCACA,OACAC,KAAKC,UAAU,CACbV,MAAOG,EAAUQ,OAAOX,MAAMC,MAC9BC,SAAUC,EAAUQ,OAAOT,SAASD,QAEtC,CACE,eAAgB,qBAElB,KAAD,EAVKW,EAAY,OAWlBhB,EAAKiB,MAAMD,EAAaE,OAAQF,EAAaG,OAAO,gDACvCC,QAAQC,IAAI,EAAD,IAAK,gCAO0B,OAP1B,WAGvBC,EAAW,IAAIC,UACZC,OAAO,QAASjB,EAAUQ,OAAOX,MAAMC,OAChDiB,EAASE,OAAO,OAAQjB,EAAUQ,OAAOU,KAAKpB,OAC9CiB,EAASE,OAAO,WAAYjB,EAAUQ,OAAOT,SAASD,OACtDiB,EAASE,OAAO,QAASjB,EAAUQ,OAAOW,MAAMrB,OAAO,UAC5BP,EACzBc,yCACA,OACAU,GACA,KAAD,GAJKN,EAAY,OAMlBhB,EAAKiB,MAAMD,EAAaE,OAAQF,EAAaG,OAAO,oHAGzD,gBAlCsB,sCAiEvB,OACE,UAAC,EAAAQ,SAAQ,YACP,SAACC,EAAA,EAAU,CAAC/B,MAAOA,EAAOgC,QAAS9B,KACnC,UAAC+B,EAAA,EAAI,CAAC7D,UAAU,iBAAgB,UAC7B2B,IAAa,SAAC,IAAO,CAACmC,WAAS,KAEhC,0BAAKtC,EAAU,QAAU,UAAU,iBACnC,mBACA,kBAAMuC,SAAUtB,EAAkB,WAC9BjB,IACA,SAACwC,EAAA,EAAK,CACJ9D,GAAG,OACH+D,QAAQ,QACRC,YAAY,OACZjE,KAAK,OACLkE,MAAM,YACNC,WAAY,EAACC,EAAAA,EAAAA,OACb/C,UAAU,6BACVR,QAASyB,KAGb,SAACyB,EAAA,EAAK,CACJ9D,GAAG,QACH+D,QAAQ,QACRC,YAAY,QACZjE,KAAK,QACLkE,MAAM,SACNC,WAAY,EAACE,EAAAA,EAAAA,OACbhD,UAAU,sCACVR,QAASyB,KAEX,SAACyB,EAAA,EAAK,CACJ9D,GAAG,WACH+D,QAAQ,QACRC,YAAY,WACZjE,KAAK,WACLkE,MAAM,WACNC,WAAY,EAACG,EAAAA,EAAAA,IAAoB,IACjCjD,UAAU,sDACVR,QAASyB,KAETf,IACA,SAACgD,EAAA,EAAW,CACVzD,QAAM,EACNb,GAAG,QACHY,QAASyB,KAIb,SAACrB,EAAA,EAAM,CAACjB,KAAK,SAASwE,UAAWnC,EAAUhD,QAAQ,SAChDkC,EAAU,QAAU,eAGzB,UAACN,EAAA,EAAM,CAACC,QAnFa,WACpBK,EAWHgB,GAAY,kBAELF,EAAUQ,QAAM,IACnBU,KAAM,CACJpB,MAAO,GACP9C,SAAS,GAEXmE,MAAO,CACLrB,MAAO,KACP9C,SAAS,MAGb,GAtBFkD,GAAY,kBAELF,EAAUQ,QAAM,IACnBU,UAAMkB,EACNjB,WAAOiB,IAETpC,EAAUQ,OAAOX,MAAM7C,QACvBgD,EAAUQ,OAAOT,SAAS/C,SAkB9BmC,GAAYD,EACd,EAuD0C,UAAC,aACxBA,EAAU,SAAW,gBAK1C,C","sources":["Shared/Components/FormElements/ImageUpload.js","Shared/Components/UIElements/Card.js","Users/Pages/Auth.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\nfunction ImageUpload(props) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n  const filePickerRef = useRef();\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p> {props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useContext, Fragment } from \"react\";\r\nimport Input from \"../../Shared/Components/FormElements/Input\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport ImageUpload from \"../../Shared/Components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../Shared/Util/Validators\";\r\nimport { useForm } from \"../../Shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../Shared/Context/Auth-context\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport Loading from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport \"./Auth.css\";\r\n\r\nfunction Auth(props) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL +\"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {console.log(err)}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL +\"/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n  const switchModelHandler = () => {\r\n    if (!isLogin) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid,\r\n        formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLogin(!isLogin);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <Loading asOverlay />}\r\n        {}\r\n        <h2>{isLogin ? \"Login\" : \"Sign Up\"} Required.</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLogin && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              placeHolder=\"Name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please Input a valid Name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            placeHolder=\"Email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please Input a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            placeHolder=\"Password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please Input a valid Password at least 6 charecter.\"\r\n            onInput={inputHandler}\r\n          />\r\n          {!isLogin && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              \r\n            />\r\n          )}\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLogin ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button onClick={switchModelHandler}>\r\n          SWITCH TO {isLogin ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","type","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","children","isLogin","setIsLogin","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useForm","email","value","password","formState","inputHandler","setFormData","authSubmitHandler","preventDefault","process","JSON","stringify","inputs","responseData","login","userId","token","console","log","formData","FormData","append","name","image","Fragment","ErrorModal","onClear","Card","asOverlay","onSubmit","Input","element","placeHolder","label","validators","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","ImageUpload","disabled","undefined"],"sourceRoot":""}